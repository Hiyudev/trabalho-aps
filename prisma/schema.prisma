// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  teams Participates[]
  votes Vote[]
  receipts Receipt[]
}

model Participates {
  id        String   @id @default(uuid())
  enteredAt DateTime @default(now())
  role      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String
}

model Team {
  id          String   @id @default(uuid())
  icon        Bytes
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  invite String @default(uuid())

  members Participates[]
  receipts Receipt[]
  events Event[]
}

model Event {
  id          String   @id @default(uuid())

  title        String
  description String

  startAt     DateTime
  endAt       DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String

  votes Vote[]
}

model Vote {
  id        String   @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
}

model Receipt {
  id        String   @id @default(uuid())
  startAt   DateTime
  endAt     DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  money Float

  user   User   @relation(fields: [userId], references: [id])
  userId String

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String
}
